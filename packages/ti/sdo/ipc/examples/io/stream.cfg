/* 
 * Copyright (c) 2012, Texas Instruments Incorporated
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * */

/*
 *  ======== stream.cfg ========
 *
 */

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Memory = xdc.useModule('xdc.runtime.Memory');
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');

var Stream = xdc.useModule('ti.sdo.io.Stream');
var Generator = xdc.useModule('ti.sdo.io.drivers.Generator');
var DriverTable = xdc.useModule('ti.sdo.io.DriverTable');

/* Create a default system heap using ti.bios.HeapMem. */
var heapMemParams = new HeapMem.Params;
heapMemParams.size = 8192;
heapMemParams.sectionName = "systemHeap";
var heap0 = HeapMem.create(heapMemParams);

/* Place user sections */
Program.sectMap["systemHeap"] = Program.platform.dataMemory;

/* Plug in systemheap as default heap to be used by Memory */
Memory.defaultHeapInstance = heap0;

/* Create a static task */
var task0 = Task.create("&task0Fxn");

/* Add Generator instance to DriverTable */
var genDevice = Generator.create();
DriverTable.addMeta("/genDevice", genDevice);
/*
 *  @(#) ti.sdo.ipc.examples; 1,0,0,; 11-7-2012 13:14:34; /db/vtree/library/trees/ipc/ipc-i09/src/ xlibrary

 */

